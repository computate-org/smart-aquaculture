openapi: 3.0.0
info:
  title: "Smart Aquaculture"
  version: 3.0.0
paths:
  /en-us/api/feed:
    get:
      operationId: searchFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFeedResponse'
    patch:
      operationId: patchFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFeedRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFeedResponse'
    post:
      operationId: postFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFeedRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFeedResponse'
    delete:
      operationId: deletefilterFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFeedResponse'
  /en-us/api/feed-import:
    put:
      operationId: putimportFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFeedRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFeedResponse'
  /en-us/api/feed/{entityShortId}:
    get:
      operationId: getFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFeedResponse'
    delete:
      operationId: deleteFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFeedResponse'
  /en-us/edit/feed/{entityShortId}:
    get:
      operationId: editpageFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFeedResponse'
  /en-us/search/feed:
    get:
      operationId: searchpageFeed
      x-vertx-event-bus: smart-aquaculture-enUS-Feed
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeds
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFeedResponse'
  /en-us/api/feeder:
    get:
      operationId: searchFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFeederResponse'
    patch:
      operationId: patchFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFeederRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFeederResponse'
    post:
      operationId: postFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFeederRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFeederResponse'
    delete:
      operationId: deletefilterFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFeederResponse'
  /en-us/api/feeder-import:
    put:
      operationId: putimportFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFeederRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFeederResponse'
  /en-us/api/feeder/{entityShortId}:
    get:
      operationId: getFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFeederResponse'
    delete:
      operationId: deleteFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFeederResponse'
  /en-us/edit/feeder/{entityShortId}:
    get:
      operationId: editpageFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFeederResponse'
  /en-us/search/feeder:
    get:
      operationId: searchpageFeeder
      x-vertx-event-bus: smart-aquaculture-enUS-Feeder
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - Feeders
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFeederResponse'
  /en-us/api/feeding-operation:
    get:
      operationId: searchFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFeedingOperationResponse'
    patch:
      operationId: patchFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFeedingOperationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFeedingOperationResponse'
    post:
      operationId: postFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFeedingOperationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFeedingOperationResponse'
    delete:
      operationId: deletefilterFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFeedingOperationResponse'
  /en-us/api/feeding-operation-import:
    put:
      operationId: putimportFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFeedingOperationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFeedingOperationResponse'
  /en-us/api/feeding-operation/{entityShortId}:
    get:
      operationId: getFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFeedingOperationResponse'
    delete:
      operationId: deleteFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFeedingOperationResponse'
  /en-us/edit/feeding-operation/{entityShortId}:
    get:
      operationId: editpageFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFeedingOperationResponse'
  /en-us/search/feeding-operation:
    get:
      operationId: searchpageFeedingOperation
      x-vertx-event-bus: smart-aquaculture-enUS-FeedingOperation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - FeedingOperations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFeedingOperationResponse'
  /en-us/api/fish-farm:
    get:
      operationId: searchFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFishFarmResponse'
    patch:
      operationId: patchFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFishFarmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFishFarmResponse'
    post:
      operationId: postFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFishFarmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFishFarmResponse'
    delete:
      operationId: deletefilterFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFishFarmResponse'
  /en-us/api/fish-farm-import:
    put:
      operationId: putimportFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFishFarmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFishFarmResponse'
  /en-us/api/fish-farm/{entityShortId}:
    get:
      operationId: getFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFishFarmResponse'
    delete:
      operationId: deleteFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFishFarmResponse'
  /en-us/edit/fish-farm/{entityShortId}:
    get:
      operationId: editpageFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFishFarmResponse'
  /en-us/search/fish-farm:
    get:
      operationId: searchpageFishFarm
      x-vertx-event-bus: smart-aquaculture-enUS-FishFarm
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish farms
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFishFarmResponse'
  /en-us/api/fishing-dock:
    get:
      operationId: searchFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFishingDockResponse'
    patch:
      operationId: patchFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFishingDockRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFishingDockResponse'
    post:
      operationId: postFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFishingDockRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFishingDockResponse'
    delete:
      operationId: deletefilterFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFishingDockResponse'
  /en-us/api/fishing-dock-import:
    put:
      operationId: putimportFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFishingDockRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFishingDockResponse'
  /en-us/api/fishing-dock/{entityShortId}:
    get:
      operationId: getFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFishingDockResponse'
    delete:
      operationId: deleteFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFishingDockResponse'
  /en-us/edit/fishing-dock/{entityShortId}:
    get:
      operationId: editpageFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFishingDockResponse'
  /en-us/search/fishing-dock:
    get:
      operationId: searchpageFishingDock
      x-vertx-event-bus: smart-aquaculture-enUS-FishingDock
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing docks
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFishingDockResponse'
  /en-us/api/fishing-trip:
    get:
      operationId: searchFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFishingTripResponse'
    patch:
      operationId: patchFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFishingTripRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFishingTripResponse'
    post:
      operationId: postFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFishingTripRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFishingTripResponse'
    delete:
      operationId: deletefilterFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFishingTripResponse'
  /en-us/api/fishing-trip-import:
    put:
      operationId: putimportFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFishingTripRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFishingTripResponse'
  /en-us/api/fishing-trip/{entityShortId}:
    get:
      operationId: getFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFishingTripResponse'
    delete:
      operationId: deleteFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFishingTripResponse'
  /en-us/edit/fishing-trip/{entityShortId}:
    get:
      operationId: editpageFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFishingTripResponse'
  /en-us/search/fishing-trip:
    get:
      operationId: searchpageFishingTrip
      x-vertx-event-bus: smart-aquaculture-enUS-FishingTrip
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fishing trips
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFishingTripResponse'
  /en-us/api/fish-population:
    get:
      operationId: searchFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFishPopulationResponse'
    patch:
      operationId: patchFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFishPopulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFishPopulationResponse'
    post:
      operationId: postFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFishPopulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFishPopulationResponse'
    delete:
      operationId: deletefilterFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFishPopulationResponse'
  /en-us/api/fish-population-import:
    put:
      operationId: putimportFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFishPopulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFishPopulationResponse'
  /en-us/api/fish-population/{entityShortId}:
    get:
      operationId: getFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFishPopulationResponse'
    delete:
      operationId: deleteFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFishPopulationResponse'
  /en-us/edit/fish-population/{entityShortId}:
    get:
      operationId: editpageFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFishPopulationResponse'
  /en-us/search/fish-population:
    get:
      operationId: searchpageFishPopulation
      x-vertx-event-bus: smart-aquaculture-enUS-FishPopulation
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish populations
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFishPopulationResponse'
  /en-us/api/fish-processing:
    get:
      operationId: searchFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchFishProcessingResponse'
    patch:
      operationId: patchFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHFishProcessingRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHFishProcessingResponse'
    post:
      operationId: postFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTFishProcessingRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTFishProcessingResponse'
    delete:
      operationId: deletefilterFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterFishProcessingResponse'
  /en-us/api/fish-processing-import:
    put:
      operationId: putimportFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportFishProcessingRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportFishProcessingResponse'
  /en-us/api/fish-processing/{entityShortId}:
    get:
      operationId: getFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETFishProcessingResponse'
    delete:
      operationId: deleteFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFishProcessingResponse'
  /en-us/edit/fish-processing/{entityShortId}:
    get:
      operationId: editpageFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageFishProcessingResponse'
  /en-us/search/fish-processing:
    get:
      operationId: searchpageFishProcessing
      x-vertx-event-bus: smart-aquaculture-enUS-FishProcessing
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - fish processing plants
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: Fiware-Service
          in: header
          schema:
            type: string
        - name: Fiware-ServicePath
          in: header
          schema:
            type: string
        - name: NGSILD-Tenant
          in: header
          schema:
            type: string
        - name: NGSILD-Path
          in: header
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageFishProcessingResponse'
  /en-us/api/map-model:
    get:
      operationId: searchMapModel
      x-vertx-event-bus: smart-aquaculture-enUS-MapModel
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - map models
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchMapModelResponse'
  /en-us/api/map-model/{entityShortId}:
    get:
      operationId: getMapModel
      x-vertx-event-bus: smart-aquaculture-enUS-MapModel
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - map models
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: entityShortId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETMapModelResponse'
  /en-us/search/map-model:
    get:
      operationId: searchpageMapModel
      x-vertx-event-bus: smart-aquaculture-enUS-MapModel
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - map models
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageMapModelResponse'
  /en-us/api/time-zone:
    get:
      operationId: searchTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchTimeZoneResponse'
    patch:
      operationId: patchTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTimeZoneRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHTimeZoneResponse'
    post:
      operationId: postTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTimeZoneRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTTimeZoneResponse'
    delete:
      operationId: deletefilterTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETEFilterTimeZoneResponse'
  /en-us/api/time-zone-import:
    put:
      operationId: putimportTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTimeZoneRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportTimeZoneResponse'
  /en-us/api/time-zone/{id}:
    get:
      operationId: getTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETTimeZoneResponse'
    delete:
      operationId: deleteTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: commitWithin
          description: 'The number of milliseconds to commit the record to Solr. '
          required: false
          schema:
            type: integer
        - in: query
          name: softCommit
          description: 'Does a soft commit for the record in Solr immediately. '
          required: false
          schema:
            type: boolean
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DELETETimeZoneResponse'
  /en-us/edit/time-zone/{id}:
    get:
      operationId: editpageTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageTimeZoneResponse'
  /en-us/search/time-zone:
    get:
      operationId: searchpageTimeZone
      x-vertx-event-bus: smart-aquaculture-enUS-TimeZone
      description: >+
      summary: >+
      tags:
        - time zones
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTimeZoneResponse'
  /en-us/api/article:
    get:
      operationId: searchSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSitePageResponse'
    patch:
      operationId: patchSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSitePageResponse'
    post:
      operationId: postSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSitePageResponse'
  /en-us/api/article-import:
    put:
      operationId: putimportSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSitePageResponse'
  /en-us/api/article/{pageId}:
    get:
      operationId: getSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: pageId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSitePageResponse'
  /en-us/edit/article/{pageId}:
    get:
      operationId: editpageSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: pageId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageSitePageResponse'
  /en-us/search/article:
    get:
      operationId: searchpageSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSitePageResponse'
  /en-us/view/article/{pageId}:
    get:
      operationId: displaypageSitePage
      x-vertx-event-bus: smart-aquaculture-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - articles
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: pageId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DisplayPageSitePageResponse'
  /en-us/api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: smart-aquaculture-enUS-SiteUser
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - site users
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: smart-aquaculture-enUS-SiteUser
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - site users
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: smart-aquaculture-enUS-SiteUser
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - site users
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /en-us/edit/user/{userId}:
    get:
      operationId: editpageSiteUser
      x-vertx-event-bus: smart-aquaculture-enUS-SiteUser
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - site users
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: userId
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EditPageSiteUserResponse'
  /en-us/search/user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: smart-aquaculture-enUS-SiteUser
      security:
        - openIdConnect:
          - openid
          - profile
      description: >+
      summary: >+
      tags:
        - site users
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: smart-aquaculture-enUS-openIdConnect-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: smart-aquaculture-enUS-openIdConnect-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://keycloak.apps-crc.testing/realms/SMARTAQUACULTURE/.well-known/openid-configuration
  requestBodies:
    SearchFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFeedResponse'
    PATCHFeedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFeedRequest'
    PATCHFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFeedResponse'
    POSTFeedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFeedRequest'
    POSTFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFeedResponse'
    DELETEFilterFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFeedResponse'
    PUTImportFeedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFeedRequest'
    PUTImportFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFeedResponse'
    GETFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFeedResponse'
    DELETEFeedResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFeedResponse'
    EditPageFeedResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFeedResponse'
    SearchPageFeedResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFeedResponse'
    SearchFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFeederResponse'
    PATCHFeederRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFeederRequest'
    PATCHFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFeederResponse'
    POSTFeederRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFeederRequest'
    POSTFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFeederResponse'
    DELETEFilterFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFeederResponse'
    PUTImportFeederRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFeederRequest'
    PUTImportFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFeederResponse'
    GETFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFeederResponse'
    DELETEFeederResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFeederResponse'
    EditPageFeederResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFeederResponse'
    SearchPageFeederResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFeederResponse'
    SearchFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFeedingOperationResponse'
    PATCHFeedingOperationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFeedingOperationRequest'
    PATCHFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFeedingOperationResponse'
    POSTFeedingOperationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFeedingOperationRequest'
    POSTFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFeedingOperationResponse'
    DELETEFilterFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFeedingOperationResponse'
    PUTImportFeedingOperationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFeedingOperationRequest'
    PUTImportFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFeedingOperationResponse'
    GETFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFeedingOperationResponse'
    DELETEFeedingOperationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFeedingOperationResponse'
    EditPageFeedingOperationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFeedingOperationResponse'
    SearchPageFeedingOperationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFeedingOperationResponse'
    SearchFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFishFarmResponse'
    PATCHFishFarmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFishFarmRequest'
    PATCHFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFishFarmResponse'
    POSTFishFarmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFishFarmRequest'
    POSTFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFishFarmResponse'
    DELETEFilterFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFishFarmResponse'
    PUTImportFishFarmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFishFarmRequest'
    PUTImportFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFishFarmResponse'
    GETFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFishFarmResponse'
    DELETEFishFarmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFishFarmResponse'
    EditPageFishFarmResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFishFarmResponse'
    SearchPageFishFarmResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFishFarmResponse'
    SearchFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFishingDockResponse'
    PATCHFishingDockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFishingDockRequest'
    PATCHFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFishingDockResponse'
    POSTFishingDockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFishingDockRequest'
    POSTFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFishingDockResponse'
    DELETEFilterFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFishingDockResponse'
    PUTImportFishingDockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFishingDockRequest'
    PUTImportFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFishingDockResponse'
    GETFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFishingDockResponse'
    DELETEFishingDockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFishingDockResponse'
    EditPageFishingDockResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFishingDockResponse'
    SearchPageFishingDockResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFishingDockResponse'
    SearchFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFishingTripResponse'
    PATCHFishingTripRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFishingTripRequest'
    PATCHFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFishingTripResponse'
    POSTFishingTripRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFishingTripRequest'
    POSTFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFishingTripResponse'
    DELETEFilterFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFishingTripResponse'
    PUTImportFishingTripRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFishingTripRequest'
    PUTImportFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFishingTripResponse'
    GETFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFishingTripResponse'
    DELETEFishingTripResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFishingTripResponse'
    EditPageFishingTripResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFishingTripResponse'
    SearchPageFishingTripResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFishingTripResponse'
    SearchFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFishPopulationResponse'
    PATCHFishPopulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFishPopulationRequest'
    PATCHFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFishPopulationResponse'
    POSTFishPopulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFishPopulationRequest'
    POSTFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFishPopulationResponse'
    DELETEFilterFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFishPopulationResponse'
    PUTImportFishPopulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFishPopulationRequest'
    PUTImportFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFishPopulationResponse'
    GETFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFishPopulationResponse'
    DELETEFishPopulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFishPopulationResponse'
    EditPageFishPopulationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFishPopulationResponse'
    SearchPageFishPopulationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFishPopulationResponse'
    SearchFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchFishProcessingResponse'
    PATCHFishProcessingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHFishProcessingRequest'
    PATCHFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHFishProcessingResponse'
    POSTFishProcessingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTFishProcessingRequest'
    POSTFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTFishProcessingResponse'
    DELETEFilterFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterFishProcessingResponse'
    PUTImportFishProcessingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportFishProcessingRequest'
    PUTImportFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportFishProcessingResponse'
    GETFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETFishProcessingResponse'
    DELETEFishProcessingResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFishProcessingResponse'
    EditPageFishProcessingResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageFishProcessingResponse'
    SearchPageFishProcessingResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageFishProcessingResponse'
    SearchMapModelResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchMapModelResponse'
    GETMapModelResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMapModelResponse'
    SearchPageMapModelResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageMapModelResponse'
    SearchTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTimeZoneResponse'
    PATCHTimeZoneRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTimeZoneRequest'
    PATCHTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTimeZoneResponse'
    POSTTimeZoneRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTimeZoneRequest'
    POSTTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTimeZoneResponse'
    DELETEFilterTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEFilterTimeZoneResponse'
    PUTImportTimeZoneRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTimeZoneRequest'
    PUTImportTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTimeZoneResponse'
    GETTimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTimeZoneResponse'
    DELETETimeZoneResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETETimeZoneResponse'
    EditPageTimeZoneResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageTimeZoneResponse'
    SearchPageTimeZoneResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTimeZoneResponse'
    SearchSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSitePageResponse'
    PATCHSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSitePageRequest'
    PATCHSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSitePageResponse'
    POSTSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSitePageRequest'
    POSTSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSitePageResponse'
    PUTImportSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageRequest'
    PUTImportSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageResponse'
    GETSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSitePageResponse'
    EditPageSitePageResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageSitePageResponse'
    SearchPageSitePageResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSitePageResponse'
    DisplayPageSitePageResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DisplayPageSitePageResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    EditPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/EditPageSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
  schemas:
    SearchFeedResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    PATCHFeedRequest:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
    PATCHFeedResponse:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
    POSTFeedRequest:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    POSTFeedResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    DELETEFilterFeedResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    PUTImportFeedRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    PUTImportFeedResponse:
      allOf:
        - type: object
          properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    GETFeedResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    DELETEFeedResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    EditPageFeedResponse:
      allOf:
        - type: string
    SearchPageFeedResponse:
      allOf:
        - type: string
    SearchFeederResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  ngsildPath:
                    type: string
    PATCHFeederRequest:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
    PATCHFeederResponse:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
    POSTFeederRequest:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            ngsildPath:
              type: string
    POSTFeederResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            ngsildPath:
              type: string
    DELETEFilterFeederResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            ngsildPath:
              type: string
    PUTImportFeederRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  ngsildPath:
                    type: string
    PUTImportFeederResponse:
      allOf:
        - type: object
          properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  ngsildPath:
                    type: string
    GETFeederResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            ngsildPath:
              type: string
    DELETEFeederResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            ngsildPath:
              type: string
    EditPageFeederResponse:
      allOf:
        - type: string
    SearchPageFeederResponse:
      allOf:
        - type: string
    SearchFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  category:
                    type: object
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  endpoint:
                    type: string
                  hasProvider:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  version:
                    type: string
    PATCHFeedingOperationRequest:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setCategory:
              type: object
              nullable: true
            removeCategory:
              type: object
            removeAllCategory:
              type: object
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setEndpoint:
              type: string
              nullable: true
            removeEndpoint:
              type: string
            removeAllEndpoint:
              type: string
            setHasProvider:
              type: string
              nullable: true
            removeHasProvider:
              type: string
            removeAllHasProvider:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
            setVersion:
              type: string
              nullable: true
            removeVersion:
              type: string
            removeAllVersion:
              type: string
    PATCHFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setAreaServedColors:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedColors:
              type: string
            removeAllAreaServedColors:
              type: array
              items:
                type: string
            addAreaServedColors:
              type: string
            addAllAreaServedColors:
              type: array
              items:
                type: string
            setAreaServedTitles:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedTitles:
              type: string
            removeAllAreaServedTitles:
              type: array
              items:
                type: string
            addAreaServedTitles:
              type: string
            addAllAreaServedTitles:
              type: array
              items:
                type: string
            setAreaServedLinks:
              type: array
              nullable: true
              items:
                type: string
            removeAreaServedLinks:
              type: string
            removeAllAreaServedLinks:
              type: array
              items:
                type: string
            addAreaServedLinks:
              type: string
            addAllAreaServedLinks:
              type: array
              items:
                type: string
            setAreaServed:
              type: object
              nullable: true
            removeAreaServed:
              type: object
            removeAllAreaServed:
              type: object
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setEntityShortId:
              type: string
              nullable: true
            removeEntityShortId:
              type: string
            removeAllEntityShortId:
              type: string
            setNgsildTenant:
              type: string
              nullable: true
            removeNgsildTenant:
              type: string
            removeAllNgsildTenant:
              type: string
            setNgsildPath:
              type: string
              nullable: true
            removeNgsildPath:
              type: string
            removeAllNgsildPath:
              type: string
            setNgsildContext:
              type: string
              nullable: true
            removeNgsildContext:
              type: string
            removeAllNgsildContext:
              type: string
            setNgsildData:
              type: object
              nullable: true
            removeNgsildData:
              type: object
            removeAllNgsildData:
              type: object
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setCategory:
              type: object
              nullable: true
            removeCategory:
              type: object
            removeAllCategory:
              type: object
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setEndpoint:
              type: string
              nullable: true
            removeEndpoint:
              type: string
            removeAllEndpoint:
              type: string
            setHasProvider:
              type: string
              nullable: true
            removeHasProvider:
              type: string
            removeAllHasProvider:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
            setVersion:
              type: string
              nullable: true
            removeVersion:
              type: string
            removeAllVersion:
              type: string
    POSTFeedingOperationRequest:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            category:
              type: object
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            endpoint:
              type: string
            hasProvider:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            version:
              type: string
    POSTFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            category:
              type: object
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            endpoint:
              type: string
            hasProvider:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            version:
              type: string
    DELETEFilterFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            category:
              type: object
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            endpoint:
              type: string
            hasProvider:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            version:
              type: string
    PUTImportFeedingOperationRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  category:
                    type: object
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  endpoint:
                    type: string
                  hasProvider:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  version:
                    type: string
    PUTImportFeedingOperationResponse:
      allOf:
        - type: object
          properties:
                  name:
                    type: string
                  description:
                    type: string
                  location:
                    type: object
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  id:
                    type: string
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  address:
                    type: object
                  alternateName:
                    type: string
                  category:
                    type: object
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  endpoint:
                    type: string
                  hasProvider:
                    type: string
                  owner:
                    type: object
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
                  version:
                    type: string
    GETFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            category:
              type: object
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            endpoint:
              type: string
            hasProvider:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            version:
              type: string
    DELETEFeedingOperationResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            location:
              type: object
            areaServedColors:
              type: array
              items:
                type: string
            areaServedTitles:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            id:
              type: string
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            address:
              type: object
            alternateName:
              type: string
            category:
              type: object
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            endpoint:
              type: string
            hasProvider:
              type: string
            owner:
              type: object
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
            version:
              type: string
    EditPageFeedingOperationResponse:
      allOf:
        - type: string
    SearchPageFeedingOperationResponse:
      allOf:
        - type: string
    SearchFishFarmResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapModelResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
    PATCHFishFarmRequest:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
    PATCHFishFarmResponse:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
    POSTFishFarmRequest:
      allOf:
        - type: object
          properties:
            address:
              type: object
    POSTFishFarmResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    DELETEFilterFishFarmResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    PUTImportFishFarmRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
    PUTImportFishFarmResponse:
      allOf:
        - type: object
          properties:
                  address:
                    type: object
    GETFishFarmResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapModelResponse"
        - type: object
          properties:
            address:
              type: object
    DELETEFishFarmResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    EditPageFishFarmResponse:
      allOf:
        - type: string
    SearchPageFishFarmResponse:
      allOf:
        - type: string
    SearchFishingDockResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapModelResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
    PATCHFishingDockRequest:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
    PATCHFishingDockResponse:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
    POSTFishingDockRequest:
      allOf:
        - type: object
          properties:
            address:
              type: object
    POSTFishingDockResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    DELETEFilterFishingDockResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    PUTImportFishingDockRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
    PUTImportFishingDockResponse:
      allOf:
        - type: object
          properties:
                  address:
                    type: object
    GETFishingDockResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapModelResponse"
        - type: object
          properties:
            address:
              type: object
    DELETEFishingDockResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
    EditPageFishingDockResponse:
      allOf:
        - type: string
    SearchPageFishingDockResponse:
      allOf:
        - type: string
    SearchFishingTripResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapModelResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  timeZone:
                    type: string
                  departureDate:
                    type: string
                  arrivalDate:
                    type: string
    PATCHFishingTripRequest:
      allOf:
        - type: object
          properties:
            setTimeZone:
              type: string
              nullable: true
            removeTimeZone:
              type: string
            removeAllTimeZone:
              type: string
            setDepartureDate:
              type: string
              nullable: true
            removeDepartureDate:
              type: string
            removeAllDepartureDate:
              type: string
            setArrivalDate:
              type: string
              nullable: true
            removeArrivalDate:
              type: string
            removeAllArrivalDate:
              type: string
    PATCHFishingTripResponse:
      allOf:
        - type: object
          properties:
            setTimeZone:
              type: string
              nullable: true
            removeTimeZone:
              type: string
            removeAllTimeZone:
              type: string
            setDepartureDate:
              type: string
              nullable: true
            removeDepartureDate:
              type: string
            removeAllDepartureDate:
              type: string
            setArrivalDate:
              type: string
              nullable: true
            removeArrivalDate:
              type: string
            removeAllArrivalDate:
              type: string
    POSTFishingTripRequest:
      allOf:
        - type: object
          properties:
            timeZone:
              type: string
            departureDate:
              type: string
            arrivalDate:
              type: string
    POSTFishingTripResponse:
      allOf:
        - type: object
          properties:
            timeZone:
              type: string
            departureDate:
              type: string
            arrivalDate:
              type: string
    DELETEFilterFishingTripResponse:
      allOf:
        - type: object
          properties:
            timeZone:
              type: string
            departureDate:
              type: string
            arrivalDate:
              type: string
    PUTImportFishingTripRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  timeZone:
                    type: string
                  departureDate:
                    type: string
                  arrivalDate:
                    type: string
    PUTImportFishingTripResponse:
      allOf:
        - type: object
          properties:
                  timeZone:
                    type: string
                  departureDate:
                    type: string
                  arrivalDate:
                    type: string
    GETFishingTripResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapModelResponse"
        - type: object
          properties:
            timeZone:
              type: string
            departureDate:
              type: string
            arrivalDate:
              type: string
    DELETEFishingTripResponse:
      allOf:
        - type: object
          properties:
            timeZone:
              type: string
            departureDate:
              type: string
            arrivalDate:
              type: string
    EditPageFishingTripResponse:
      allOf:
        - type: string
    SearchPageFishingTripResponse:
      allOf:
        - type: string
    SearchFishPopulationResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapModelResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
                  alternateName:
                    type: string
                  bodyMasse:
                    type: string
                  culturedIn:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  fishRemoved:
                    type: string
                  initialNumber:
                    type: string
                  owner:
                    type: object
                  refSpecie:
                    type: string
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    PATCHFishPopulationRequest:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setBodyMasse:
              type: string
              nullable: true
            removeBodyMasse:
              type: string
            removeAllBodyMasse:
              type: string
            setCulturedIn:
              type: string
              nullable: true
            removeCulturedIn:
              type: string
            removeAllCulturedIn:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setFishRemoved:
              type: string
              nullable: true
            removeFishRemoved:
              type: string
            removeAllFishRemoved:
              type: string
            setInitialNumber:
              type: string
              nullable: true
            removeInitialNumber:
              type: string
            removeAllInitialNumber:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRefSpecie:
              type: string
              nullable: true
            removeRefSpecie:
              type: string
            removeAllRefSpecie:
              type: string
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
    PATCHFishPopulationResponse:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setAlternateName:
              type: string
              nullable: true
            removeAlternateName:
              type: string
            removeAllAlternateName:
              type: string
            setBodyMasse:
              type: string
              nullable: true
            removeBodyMasse:
              type: string
            removeAllBodyMasse:
              type: string
            setCulturedIn:
              type: string
              nullable: true
            removeCulturedIn:
              type: string
            removeAllCulturedIn:
              type: string
            setDataProvider:
              type: string
              nullable: true
            removeDataProvider:
              type: string
            removeAllDataProvider:
              type: string
            setDateCreated:
              type: string
              nullable: true
            removeDateCreated:
              type: string
            removeAllDateCreated:
              type: string
            setDateModified:
              type: string
              nullable: true
            removeDateModified:
              type: string
            removeAllDateModified:
              type: string
            setFishRemoved:
              type: string
              nullable: true
            removeFishRemoved:
              type: string
            removeAllFishRemoved:
              type: string
            setInitialNumber:
              type: string
              nullable: true
            removeInitialNumber:
              type: string
            removeAllInitialNumber:
              type: string
            setOwner:
              type: object
              nullable: true
            removeOwner:
              type: object
            removeAllOwner:
              type: object
            setRefSpecie:
              type: string
              nullable: true
            removeRefSpecie:
              type: string
            removeAllRefSpecie:
              type: string
            setRelatedSource:
              type: object
              nullable: true
            removeRelatedSource:
              type: object
            removeAllRelatedSource:
              type: object
            setSeeAlso:
              type: string
              nullable: true
            removeSeeAlso:
              type: string
            removeAllSeeAlso:
              type: string
            setSource:
              type: string
              nullable: true
            removeSource:
              type: string
            removeAllSource:
              type: string
    POSTFishPopulationRequest:
      allOf:
        - type: object
          properties:
            address:
              type: object
            alternateName:
              type: string
            bodyMasse:
              type: string
            culturedIn:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            fishRemoved:
              type: string
            initialNumber:
              type: string
            owner:
              type: object
            refSpecie:
              type: string
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    POSTFishPopulationResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            alternateName:
              type: string
            bodyMasse:
              type: string
            culturedIn:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            fishRemoved:
              type: string
            initialNumber:
              type: string
            owner:
              type: object
            refSpecie:
              type: string
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    DELETEFilterFishPopulationResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            alternateName:
              type: string
            bodyMasse:
              type: string
            culturedIn:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            fishRemoved:
              type: string
            initialNumber:
              type: string
            owner:
              type: object
            refSpecie:
              type: string
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    PUTImportFishPopulationRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
                  alternateName:
                    type: string
                  bodyMasse:
                    type: string
                  culturedIn:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  fishRemoved:
                    type: string
                  initialNumber:
                    type: string
                  owner:
                    type: object
                  refSpecie:
                    type: string
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    PUTImportFishPopulationResponse:
      allOf:
        - type: object
          properties:
                  address:
                    type: object
                  alternateName:
                    type: string
                  bodyMasse:
                    type: string
                  culturedIn:
                    type: string
                  dataProvider:
                    type: string
                  dateCreated:
                    type: string
                  dateModified:
                    type: string
                  fishRemoved:
                    type: string
                  initialNumber:
                    type: string
                  owner:
                    type: object
                  refSpecie:
                    type: string
                  relatedSource:
                    type: object
                  seeAlso:
                    type: string
                  source:
                    type: string
    GETFishPopulationResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapModelResponse"
        - type: object
          properties:
            address:
              type: object
            alternateName:
              type: string
            bodyMasse:
              type: string
            culturedIn:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            fishRemoved:
              type: string
            initialNumber:
              type: string
            owner:
              type: object
            refSpecie:
              type: string
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    DELETEFishPopulationResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            alternateName:
              type: string
            bodyMasse:
              type: string
            culturedIn:
              type: string
            dataProvider:
              type: string
            dateCreated:
              type: string
            dateModified:
              type: string
            fishRemoved:
              type: string
            initialNumber:
              type: string
            owner:
              type: object
            refSpecie:
              type: string
            relatedSource:
              type: object
            seeAlso:
              type: string
            source:
              type: string
    EditPageFishPopulationResponse:
      allOf:
        - type: string
    SearchPageFishPopulationResponse:
      allOf:
        - type: string
    SearchFishProcessingResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapModelResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
                  color:
                    type: string
    PATCHFishProcessingRequest:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setColor:
              type: string
              nullable: true
            removeColor:
              type: string
            removeAllColor:
              type: string
    PATCHFishProcessingResponse:
      allOf:
        - type: object
          properties:
            setAddress:
              type: object
              nullable: true
            removeAddress:
              type: object
            removeAllAddress:
              type: object
            setColor:
              type: string
              nullable: true
            removeColor:
              type: string
            removeAllColor:
              type: string
    POSTFishProcessingRequest:
      allOf:
        - type: object
          properties:
            address:
              type: object
            color:
              type: string
    POSTFishProcessingResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            color:
              type: string
    DELETEFilterFishProcessingResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            color:
              type: string
    PUTImportFishProcessingRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: object
                  color:
                    type: string
    PUTImportFishProcessingResponse:
      allOf:
        - type: object
          properties:
                  address:
                    type: object
                  color:
                    type: string
    GETFishProcessingResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapModelResponse"
        - type: object
          properties:
            address:
              type: object
            color:
              type: string
    DELETEFishProcessingResponse:
      allOf:
        - type: object
          properties:
            address:
              type: object
            color:
              type: string
    EditPageFishProcessingResponse:
      allOf:
        - type: string
    SearchPageFishProcessingResponse:
      allOf:
        - type: string
    SearchMapModelResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  areaServedColors:
                    type: array
                    items:
                      type: string
                  areaServedLinks:
                    type: array
                    items:
                      type: string
                  areaServed:
                    type: object
                  entityShortId:
                    type: string
                  ngsildTenant:
                    type: string
                  ngsildPath:
                    type: string
                  ngsildContext:
                    type: string
                  ngsildData:
                    type: object
                  color:
                    type: string
                  classCanonicalNames:
                    type: array
                    items:
                      type: string
                  location:
                    type: object
                  areaServedTitles:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
    GETMapModelResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            areaServedColors:
              type: array
              items:
                type: string
            areaServedLinks:
              type: array
              items:
                type: string
            areaServed:
              type: object
            entityShortId:
              type: string
            ngsildTenant:
              type: string
            ngsildPath:
              type: string
            ngsildContext:
              type: string
            ngsildData:
              type: object
            color:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            location:
              type: object
            areaServedTitles:
              type: array
              items:
                type: string
            id:
              type: string
    SearchPageMapModelResponse:
      allOf:
        - type: string
    SearchTimeZoneResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
    PATCHTimeZoneRequest:
      allOf:
        - type: object
          properties:
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    PATCHTimeZoneResponse:
      allOf:
        - type: object
          properties:
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    POSTTimeZoneRequest:
      allOf:
        - type: object
          properties:
            id:
              type: string
    POSTTimeZoneResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
    DELETEFilterTimeZoneResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
    PUTImportTimeZoneRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
    PUTImportTimeZoneResponse:
      allOf:
        - type: object
          properties:
                  id:
                    type: string
    GETTimeZoneResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
    DELETETimeZoneResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
    EditPageTimeZoneResponse:
      allOf:
        - type: string
    SearchPageTimeZoneResponse:
      allOf:
        - type: string
    SearchSitePageResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  article:
                    type: boolean
                  githubOrg:
                    type: string
                  siteName:
                    type: string
                  siteDisplayName:
                    type: string
                  sitePublicUrl:
                    type: string
                  mailingListUrl:
                    type: string
                  quayioOrg:
                    type: string
                  sitePomGroupId:
                    type: string
                  staticBaseUrl:
                    type: string
                  staticPath:
                    type: string
                  siteBaseUrl:
                    type: string
                  courseNum:
                    type: string
                  lessonNum:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  authorName:
                    type: string
                  authorUrl:
                    type: string
                  pageId:
                    type: string
                  h1:
                    type: string
                  h2:
                    type: string
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
                  pageImageAlt:
                    type: string
                  relatedArticleIds:
                    type: string
                  relatedArticles:
                    type: array
                    items:
                      anyOf:
                        - type: string
                        - type: number
                        - type: string
                        - type: boolean
    PATCHSitePageRequest:
      allOf:
        - type: object
          properties:
            setArticle:
              type: boolean
              nullable: true
            removeArticle:
              type: boolean
            removeAllArticle:
              type: boolean
            setGithubOrg:
              type: string
              nullable: true
            removeGithubOrg:
              type: string
            removeAllGithubOrg:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setSitePublicUrl:
              type: string
              nullable: true
            removeSitePublicUrl:
              type: string
            removeAllSitePublicUrl:
              type: string
            setMailingListUrl:
              type: string
              nullable: true
            removeMailingListUrl:
              type: string
            removeAllMailingListUrl:
              type: string
            setQuayioOrg:
              type: string
              nullable: true
            removeQuayioOrg:
              type: string
            removeAllQuayioOrg:
              type: string
            setSitePomGroupId:
              type: string
              nullable: true
            removeSitePomGroupId:
              type: string
            removeAllSitePomGroupId:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setAuthorName:
              type: string
              nullable: true
            removeAuthorName:
              type: string
            removeAllAuthorName:
              type: string
            setAuthorUrl:
              type: string
              nullable: true
            removeAuthorUrl:
              type: string
            removeAllAuthorUrl:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
            setPageImageAlt:
              type: string
              nullable: true
            removePageImageAlt:
              type: string
            removeAllPageImageAlt:
              type: string
            setRelatedArticleIds:
              type: string
              nullable: true
            removeRelatedArticleIds:
              type: string
            removeAllRelatedArticleIds:
              type: string
            setRelatedArticles:
              type: array
              nullable: true
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
            removeRelatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
            removeAllRelatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
    PATCHSitePageResponse:
      allOf:
        - type: object
          properties:
            setArticle:
              type: boolean
              nullable: true
            removeArticle:
              type: boolean
            removeAllArticle:
              type: boolean
            setGithubOrg:
              type: string
              nullable: true
            removeGithubOrg:
              type: string
            removeAllGithubOrg:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setSitePublicUrl:
              type: string
              nullable: true
            removeSitePublicUrl:
              type: string
            removeAllSitePublicUrl:
              type: string
            setMailingListUrl:
              type: string
              nullable: true
            removeMailingListUrl:
              type: string
            removeAllMailingListUrl:
              type: string
            setQuayioOrg:
              type: string
              nullable: true
            removeQuayioOrg:
              type: string
            removeAllQuayioOrg:
              type: string
            setSitePomGroupId:
              type: string
              nullable: true
            removeSitePomGroupId:
              type: string
            removeAllSitePomGroupId:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
            setDescription:
              type: string
              nullable: true
            removeDescription:
              type: string
            removeAllDescription:
              type: string
            setAuthorName:
              type: string
              nullable: true
            removeAuthorName:
              type: string
            removeAllAuthorName:
              type: string
            setAuthorUrl:
              type: string
              nullable: true
            removeAuthorUrl:
              type: string
            removeAllAuthorUrl:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
            setPageImageAlt:
              type: string
              nullable: true
            removePageImageAlt:
              type: string
            removeAllPageImageAlt:
              type: string
            setRelatedArticleIds:
              type: string
              nullable: true
            removeRelatedArticleIds:
              type: string
            removeAllRelatedArticleIds:
              type: string
            setRelatedArticles:
              type: array
              nullable: true
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
            removeRelatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
            removeAllRelatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
    POSTSitePageRequest:
      allOf:
        - type: object
          properties:
            article:
              type: boolean
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            name:
              type: string
            description:
              type: string
            authorName:
              type: string
            authorUrl:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            pageImageAlt:
              type: string
            relatedArticleIds:
              type: string
            relatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
    POSTSitePageResponse:
      allOf:
        - type: object
          properties:
            article:
              type: boolean
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            name:
              type: string
            description:
              type: string
            authorName:
              type: string
            authorUrl:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            pageImageAlt:
              type: string
            relatedArticleIds:
              type: string
            relatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
    PUTImportSitePageRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  article:
                    type: boolean
                  githubOrg:
                    type: string
                  siteName:
                    type: string
                  siteDisplayName:
                    type: string
                  sitePublicUrl:
                    type: string
                  mailingListUrl:
                    type: string
                  quayioOrg:
                    type: string
                  sitePomGroupId:
                    type: string
                  staticBaseUrl:
                    type: string
                  staticPath:
                    type: string
                  siteBaseUrl:
                    type: string
                  courseNum:
                    type: string
                  lessonNum:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  authorName:
                    type: string
                  authorUrl:
                    type: string
                  pageId:
                    type: string
                  h1:
                    type: string
                  h2:
                    type: string
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
                  pageImageAlt:
                    type: string
                  relatedArticleIds:
                    type: string
                  relatedArticles:
                    type: array
                    items:
                      anyOf:
                        - type: string
                        - type: number
                        - type: string
                        - type: boolean
    PUTImportSitePageResponse:
      allOf:
        - type: object
          properties:
                  article:
                    type: boolean
                  githubOrg:
                    type: string
                  siteName:
                    type: string
                  siteDisplayName:
                    type: string
                  sitePublicUrl:
                    type: string
                  mailingListUrl:
                    type: string
                  quayioOrg:
                    type: string
                  sitePomGroupId:
                    type: string
                  staticBaseUrl:
                    type: string
                  staticPath:
                    type: string
                  siteBaseUrl:
                    type: string
                  courseNum:
                    type: string
                  lessonNum:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  authorName:
                    type: string
                  authorUrl:
                    type: string
                  pageId:
                    type: string
                  h1:
                    type: string
                  h2:
                    type: string
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
                  pageImageAlt:
                    type: string
                  relatedArticleIds:
                    type: string
                  relatedArticles:
                    type: array
                    items:
                      anyOf:
                        - type: string
                        - type: number
                        - type: string
                        - type: boolean
    GETSitePageResponse:
      allOf:
        - type: object
          properties:
            article:
              type: boolean
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            name:
              type: string
            description:
              type: string
            authorName:
              type: string
            authorUrl:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            pageImageAlt:
              type: string
            relatedArticleIds:
              type: string
            relatedArticles:
              type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: string
                  - type: boolean
    EditPageSitePageResponse:
      allOf:
        - type: string
    SearchPageSitePageResponse:
      allOf:
        - type: string
    DisplayPageSitePageResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userFullName:
                    type: string
                  displayName:
                    type: string
                  siteFontSize:
                    type: string
                  siteTheme:
                    type: string
                  webComponentsTheme:
                    type: string
                  userKeys:
                    type: array
                    items:
                      type: string
                  userLastName:
                    type: string
                  seeArchived:
                    type: boolean
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setDisplayName:
              type: string
              nullable: true
            removeDisplayName:
              type: string
            removeAllDisplayName:
              type: string
            setSiteFontSize:
              type: string
              nullable: true
            removeSiteFontSize:
              type: string
            removeAllSiteFontSize:
              type: string
            setSiteTheme:
              type: string
              nullable: true
            removeSiteTheme:
              type: string
            removeAllSiteTheme:
              type: string
            setWebComponentsTheme:
              type: string
              nullable: true
            removeWebComponentsTheme:
              type: string
            removeAllWebComponentsTheme:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setDisplayName:
              type: string
              nullable: true
            removeDisplayName:
              type: string
            removeAllDisplayName:
              type: string
            setSiteFontSize:
              type: string
              nullable: true
            removeSiteFontSize:
              type: string
            removeAllSiteFontSize:
              type: string
            setSiteTheme:
              type: string
              nullable: true
            removeSiteTheme:
              type: string
            removeAllSiteTheme:
              type: string
            setWebComponentsTheme:
              type: string
              nullable: true
            removeWebComponentsTheme:
              type: string
            removeAllWebComponentsTheme:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userFullName:
              type: string
            displayName:
              type: string
            siteFontSize:
              type: string
            siteTheme:
              type: string
            webComponentsTheme:
              type: string
            userKeys:
              type: array
              items:
                type: string
            userLastName:
              type: string
            seeArchived:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userFullName:
              type: string
            displayName:
              type: string
            siteFontSize:
              type: string
            siteTheme:
              type: string
            webComponentsTheme:
              type: string
            userKeys:
              type: array
              items:
                type: string
            userLastName:
              type: string
            seeArchived:
              type: boolean
    EditPageSiteUserResponse:
      allOf:
        - type: string
    SearchPageSiteUserResponse:
      allOf:
        - type: string
